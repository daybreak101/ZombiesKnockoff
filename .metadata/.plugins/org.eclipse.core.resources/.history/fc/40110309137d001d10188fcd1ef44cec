package main;

import java.awt.Color;

import utils.Utils;

public class Settings {

	private Handler handler;
	private double zoomLevel;
	private boolean gore, zombieCounter;
	private Color laserColor;
	private Color hudColor;

	public Settings(Handler handler) {
		this.handler = handler;
		// default settings
		zoomLevel = 1;
		gore = true;
		zombieCounter = false;
		laserColor = Color.red;
		hudColor = Color.green;
		useSavedSettings();
	}

	public void useSavedSettings() {
		String file = Utils.loadFileAsString("/info/settings.txt");
		String[] tokens = file.split("\\s+");
		int i = 0;
		int token = 0;

		if (tokens.length == 0) {
			return;
		}
		int zoomLevelToken = Utils.parseInt(tokens[i++]);
		int hudColorToken = Utils.parseInt(tokens[i++]);
		int laserColorToken = Utils.parseInt(tokens[i++]);
		int zombieCounterToken = Utils.parseInt(tokens[i++]);

		switch (zoomLevelToken) {
		case 0:	zoomLevel = 1.0; break;
		case 1: zoomLevel = 1.1; break;
		case 2: zoomLevel = 1.2; break;
		case 3:	zoomLevel = 1.3; break;
		case 4: zoomLevel = 1.4; break;
		case 5: zoomLevel = 1.5; break;
		default: zoomLevel = 1.0; break;
		}
		
		switch (hudColorToken) {
		case 0:	hudColor = Color.green; break;
		case 1: hudColor = Color.yellow; break;
		case 2: hudColor = Color.red; break;
		case 3:	hudColor = Color.blue; break;
		case 4: hudColor = Color.magenta; break;
		case 5: hudColor = Color.cyan; break;
		case 6:	hudColor = Color.orange; break;
		case 7: hudColor = Color.white; break;
		default: hudColor = Color.green; break;
		}
		
		switch (laserColorToken) {
		case 0: laserColor = Color.green; break;
		case 1: laserColor = Color.yellow; break;
		case 2: laserColor = Color.red; break;
		case 3:	laserColor = Color.blue; break;
		case 4: laserColor = Color.magenta; break;
		case 5: laserColor = Color.cyan; break;
		case 6:	laserColor = Color.orange; break;
		case 7: laserColor = Color.white; break;
		default: laserColor = Color.red; break;
		}
		
		switch (zombieCounterToken) {
		case 0: zombieCounter = false; break;
		case 1: zombieCounter = true; break;
		default: zombieCounter = false; break;
		}

	}

	public Handler getHandler() {
		return handler;
	}

	public void setHandler(Handler handler) {
		this.handler = handler;
	}

	public double getZoomLevel() {
		return zoomLevel;
	}

	public void setZoomLevel(double zoomLevel) {
		this.zoomLevel = zoomLevel;
	}

	public boolean isGore() {
		return gore;
	}

	public void setGore(boolean gore) {
		this.gore = gore;
	}

	public Color getLaserColor() {
		return laserColor;
	}

	public void setLaserColor(Color laserColor) {
		this.laserColor = laserColor;
	}

	public Color getHudColor() {
		return hudColor;
	}

	public void setHudColor(Color hudColor) {
		this.hudColor = hudColor;
	}

	public boolean isZombieCounter() {
		return zombieCounter;
	}

	public void setZombieCounter(boolean zombieCounter) {
		this.zombieCounter = zombieCounter;
	}
}
